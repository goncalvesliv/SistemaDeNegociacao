<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        i6b5P9x1OLZDgzdGAAAAAElFTkSuQmCC
</value>
  </data>
</root>